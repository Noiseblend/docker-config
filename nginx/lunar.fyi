server {
    listen 80;

    server_name *.lunar.fyi;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    include     /etc/nginx/lunar_ssl_params;

    server_name static.lunar.fyi;

    access_log /dev/stdout main;
    error_log stderr;

    root /static/Lunar;
    autoindex off;
    expires  14d;
    add_header Cache-Control public;

    location / {

    }
}

log_format lunar_analytics 'ts=$time_iso8601 ip=$remote_addr country=$http_cf_ipcountry $request_body';
log_format lunar_logs '$request_body';

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    include     /etc/nginx/lunar_ssl_params;

    server_name log.lunar.fyi;

    access_log /dev/stdout main;
    error_log stderr;

    auth_basic "Restricted";
    auth_basic_user_file /run/secrets/htpasswd-v0;

    location /analytics {
        add_header Allow "POST" always;
        echo_read_request_body;
        if ( $request_method !~ ^(POST)$ ) {
            return 405;
        }

        auth_basic "Restricted";
        auth_basic_user_file /run/secrets/htpasswd-v0;

        access_log /var/log/lunar-analytics lunar_analytics if=$loggable;
    }

    location /upload {
        add_header Allow "POST" always;
        echo_read_request_body;
        if ( $request_method !~ ^(POST)$ ) {
            return 405;
        }
        if ( $http_x_filename !~ "^([a-zA-Z0-9]{64}\.log)(\.enc)?$" ) {
            return 400;
        }

        client_body_buffer_size 20M;
        client_max_body_size 20M;

        auth_basic "Restricted";
        auth_basic_user_file /run/secrets/htpasswd-v0;

        root /var/log/lunar;
        access_log /var/log/lunar/$http_x_filename lunar_logs if=$loggable;
    }
}
